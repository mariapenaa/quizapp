{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","questions","questionText","answerOptions","answerText","isCorrect","useState","currentQuestion","setCurrentQuestion","score","setScore","showScore","setShowScore","className","length","onClick","map","answerOption","index","nextQuestion","handleAnswerButtonClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oLAAe,I,YCoGAA,MAhGf,WAEE,IAAMC,EAAY,CAClB,CACCC,aAAc,iCACdC,cAAe,CACd,CAAEC,WAAY,WAAYC,WAAW,GACrC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,SAAUC,WAAW,KAGrC,CACCH,aAAc,uBACdC,cAAe,CACd,CAAEC,WAAY,aAAcC,WAAW,GACvC,CAAED,WAAY,YAAaC,WAAW,GACtC,CAAED,WAAY,aAAcC,WAAW,GACvC,CAAED,WAAY,aAAcC,WAAW,KAGzC,CACCH,aAAc,2CACdC,cAAe,CACd,CAAEC,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,YAAaC,WAAW,KAGxC,CACCH,aAAc,yCACdC,cAAe,CACd,CAAEC,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,GAC9B,CAAED,WAAY,IAAKC,WAAW,MApCnB,EA2CgCC,mBAAS,GA3CzC,mBA2CPC,EA3CO,KA2CUC,EA3CV,OA4CYF,mBAAS,GA5CrB,mBA4CPG,EA5CO,KA4CAC,EA5CA,OA6CoBJ,oBAAS,GA7C7B,mBA6CPK,EA7CO,KA6CIC,EA7CJ,KAiEd,OACC,qBAAKC,UAAU,MAAf,SAEEF,EACA,qCACC,sBAAKE,UAAU,gBAAf,wBAA2CJ,EAA3C,WAA0DR,EAAUa,UACpE,wBAASC,QAAS,kBAVrBH,GAAa,QACbJ,EAAmB,IAShB,uBAGD,qCAEE,sBAAKK,UAAU,mBAAf,UACC,sBAAKA,UAAU,iBAAf,UACC,6CAAgBN,EAAgB,KADjC,IAC4CN,EAAUa,UAEtD,qBAAKD,UAAU,gBAAf,SAAgCZ,EAAUM,GAAiBL,kBAE5D,qBAAKW,UAAU,iBAAf,SACEZ,EAAUM,GAAiBJ,cAAca,KAAI,SAACC,EAAcC,GAAf,OAC9C,wBAAQH,QAAS,kBArCS,SAACV,GAChC,IAAMc,EAAeZ,EAAkB,EACpCY,EAAelB,EAAUa,OAC3BN,EAAmBW,GAEnBP,GAAa,GAGXP,GACFK,EAASD,EAAM,GA4BUW,CAAwBH,EAAaZ,YAA1D,SAAuEY,EAAab,wBC5E5EiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.11dd95b0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n\n  const questions = [\n\t\t{\n\t\t\tquestionText: 'What is the capital of France?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'New York', isCorrect: false },\n\t\t\t\t{ answerText: 'London', isCorrect: false },\n\t\t\t\t{ answerText: 'Paris', isCorrect: true },\n\t\t\t\t{ answerText: 'Dublin', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Who is CEO of Tesla?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Jeff Bezos', isCorrect: false },\n\t\t\t\t{ answerText: 'Elon Musk', isCorrect: true },\n\t\t\t\t{ answerText: 'Bill Gates', isCorrect: false },\n\t\t\t\t{ answerText: 'Tony Stark', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'The iPhone was created by which company?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Apple', isCorrect: true },\n\t\t\t\t{ answerText: 'Intel', isCorrect: false },\n\t\t\t\t{ answerText: 'Amazon', isCorrect: false },\n\t\t\t\t{ answerText: 'Microsoft', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'How many Harry Potter books are there?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '1', isCorrect: false },\n\t\t\t\t{ answerText: '4', isCorrect: false },\n\t\t\t\t{ answerText: '6', isCorrect: false },\n\t\t\t\t{ answerText: '7', isCorrect: true },\n\t\t\t],\n\t\t},\n\t];\n\n  //What we want to do is use a state object to hold which question the user is currently on, \n  //and update this when an answer button is clicked. You can see this from running the code in the final example.\n\tconst [currentQuestion, setCurrentQuestion] = useState(0)\n\tconst [score, setScore] = useState(0);\n\tconst [showScore, setShowScore] = useState(false); \n\n\tconst handleAnswerButtonClick = (isCorrect) =>{\n\t\tconst nextQuestion = currentQuestion + 1;\n\t\tif(nextQuestion < questions.length){\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t}else{\n\t\t\tsetShowScore(true)\n\t\t}\n\n\t\tif(isCorrect){\n\t\t\tsetScore(score+1)\n\t\t}\n\t}\n\n\tconst handleAgainClick = () =>{\n\t\tsetShowScore(false);\n\t\tsetCurrentQuestion(0)\n\t}\n\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t\n\t\t\t{showScore ? (\n\t\t\t\t<>\n\t\t\t\t\t<div className='score-section'>You scored {score} out of {questions.length}</div>\n\t\t\t\t\t<button  onClick={()=>handleAgainClick()}>Again?</button>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\n\t\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t\t<span>Question {currentQuestion+1}</span>/{questions.length}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='answer-section'>\n\t\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption, index)=>(\n\t\t\t\t\t\t\t<button onClick={()=>handleAnswerButtonClick(answerOption.isCorrect)}>{answerOption.answerText}</button>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\n\t\t\t\t</>\n\t\t\t)}\n\n\t\t</div>\n\t\n\t)\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}